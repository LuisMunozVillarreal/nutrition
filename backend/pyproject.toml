[tool.bandit]
exclude_dirs = ["tests", ".tox"]

[tool.black]
line-length = 79

[tool.pydocstyle]
convention = "google"
match = ".*\\.py"
match-dir = "(?!migrations).*"
add-ignore = "D107,D104,D106"

[tool.mypy]
plugins = "mypy_django_plugin.main"

[[tool.mypy.overrides]]
module = "taggit.models,django_sql_dashboard,django_sql_dashboard.models"
ignore_missing_imports = true

[tool.django-stubs]
django_settings_module = "config.settings"

[tool.poetry]
name = "nutrition"
version = "0.1.0"
description = ""
authors = ["Luis Mu√±oz <luis.munoz.villarreal@gmail.com>"]
packages = [
    { include = "apps" },
    { include = "config" },
    { include = "manage.py" },
]

[tool.poetry.dependencies]
beautifulsoup4 = "^4.13.3"
django-admin-sortable2 = "^2.2.4"
django-allow-cidr = ">=0.7.1,<0.9.0"
django-compressor = "^4.5.1"
django-cors-headers = "^4.7.0"
django-dbbackup = ">=4.2.1,<6.0.0"
django-dotenv = "^1.4.2"
django-environ = ">=0.11.2,<0.13.0"
django-extensions = ">=3.2.3,<5.0.0"
django-nested-admin = "^4.1.1"
django-sql-dashboard = "^1.2"
django-storages = {extras = ["google"], version = "^1.14.4"}
django-taggit = "^6.1.0"
django = "^5.1.6"
google-generativeai = ">=0.8.4"
gunicorn = ">=23.0.0"
pillow = "^11.1.0"
pint = ">=0.24.4"
psycopg2 = "^2.9.10"
python = "^3.11"
supervisor = "^4.2.5"

[tool.poetry.group.dev.dependencies]
bandit = {extras = ["toml"], version = "^1.8.2"}
black = ">=24.10,<26.0"
django-stubs = "^5.1.3"
flake8 = "^7.1.1"
flake8-isort = "^6.1.2"
epc = "^0.0.5"
ipython = ">=8.32,<10.0"
ipdb = "^0.13.13"
importmagic = "^0.1.7"
mypy = "^1.15.0"
pydocstyle = "^6.3.0"
pylint-django = "^2.6.1"
pylint = "^3.3.4"
pytest-cov = ">=6.0.0"
python-lsp-server = {extras = ["all"], version = "^1.12.2"}
pytest-django = "^4.9.0"
pytest-dotenv = "^0.5.2"
pytest-factoryboy = "^2.7.0"
pytest-mock = "^3.14.0"
pytest-xdist = "^3.6.1"
pytest = "^8.3.4"
requests-mock = "^1.12.1"
tox = "^4.24.1"
types-requests = "^2.32.0.20241016"
types-beautifulsoup4 = "^4.12.0.20250204"
debugpy = "^1.8.12"

[tool.poetry.scripts]
nutrition = "manage:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
