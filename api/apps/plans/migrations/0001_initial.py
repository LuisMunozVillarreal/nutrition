# Generated by Django 4.2 on 2023-05-12 22:39

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("measurements", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Day",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "calories",
                    models.DecimalField(decimal_places=1, max_digits=10),
                ),
                (
                    "protein_g",
                    models.DecimalField(decimal_places=1, max_digits=10),
                ),
                (
                    "fat_g",
                    models.DecimalField(
                        decimal_places=1,
                        max_digits=10,
                        verbose_name="Total Fat (g)",
                    ),
                ),
                (
                    "saturated_fat_g",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=10, null=True
                    ),
                ),
                (
                    "polyunsaturated_fat_g",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=10, null=True
                    ),
                ),
                (
                    "monosaturated_fat_g",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=10, null=True
                    ),
                ),
                (
                    "trans_fat_g",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=10, null=True
                    ),
                ),
                (
                    "carbs_g",
                    models.DecimalField(
                        decimal_places=1,
                        max_digits=10,
                        verbose_name="Total Carbs (g)",
                    ),
                ),
                (
                    "fiber_carbs_g",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=10, null=True
                    ),
                ),
                (
                    "sugar_carbs_g",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=10, null=True
                    ),
                ),
                (
                    "sodium_mg",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=10, null=True
                    ),
                ),
                (
                    "potassium_mg",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=10, null=True
                    ),
                ),
                (
                    "vitamin_a_perc",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "vitamin_c_perc",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "calcium_perc",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "iron_perc",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("day", models.DateField()),
            ],
            options={
                "ordering": ["plan", "-day"],
            },
        ),
        migrations.CreateModel(
            name="Intake",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "calories",
                    models.DecimalField(decimal_places=1, max_digits=10),
                ),
                (
                    "protein_g",
                    models.DecimalField(decimal_places=1, max_digits=10),
                ),
                (
                    "fat_g",
                    models.DecimalField(
                        decimal_places=1,
                        max_digits=10,
                        verbose_name="Total Fat (g)",
                    ),
                ),
                (
                    "saturated_fat_g",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=10, null=True
                    ),
                ),
                (
                    "polyunsaturated_fat_g",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=10, null=True
                    ),
                ),
                (
                    "monosaturated_fat_g",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=10, null=True
                    ),
                ),
                (
                    "trans_fat_g",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=10, null=True
                    ),
                ),
                (
                    "carbs_g",
                    models.DecimalField(
                        decimal_places=1,
                        max_digits=10,
                        verbose_name="Total Carbs (g)",
                    ),
                ),
                (
                    "fiber_carbs_g",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=10, null=True
                    ),
                ),
                (
                    "sugar_carbs_g",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=10, null=True
                    ),
                ),
                (
                    "sodium_mg",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=10, null=True
                    ),
                ),
                (
                    "potassium_mg",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=10, null=True
                    ),
                ),
                (
                    "vitamin_a_perc",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "vitamin_c_perc",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "calcium_perc",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "iron_perc",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("serving_size", models.PositiveIntegerField(default=100)),
                (
                    "serving_unit",
                    models.CharField(
                        choices=[("g", "gram(s)"), ("mg", "miligram(s)")],
                        default="g",
                        max_length=20,
                    ),
                ),
                ("time", models.TimeField(default=datetime.time(0, 0))),
                (
                    "meal",
                    models.CharField(
                        choices=[
                            ("breakfast", "Breakfast"),
                            ("lunch", "Lunch"),
                            ("snack", "Snack"),
                            ("dinner", "Dinner"),
                        ],
                        max_length=20,
                    ),
                ),
                ("meal_order", models.PositiveIntegerField(editable=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WeekPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("start_date", models.DateField()),
                (
                    "protein_kg",
                    models.DecimalField(
                        decimal_places=1,
                        help_text="Protein / kg (gr)",
                        max_digits=10,
                    ),
                ),
                (
                    "fat_perc",
                    models.DecimalField(decimal_places=1, max_digits=10),
                ),
                (
                    "deficit",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Deficit (kcals/day)"
                    ),
                ),
                (
                    "protein_g_goal_day",
                    models.DecimalField(
                        decimal_places=1, editable=False, max_digits=10
                    ),
                ),
                (
                    "fat_g_goal_day",
                    models.DecimalField(
                        decimal_places=1, editable=False, max_digits=10
                    ),
                ),
                (
                    "carbs_g_goal_day",
                    models.DecimalField(
                        decimal_places=1, editable=False, max_digits=10
                    ),
                ),
                (
                    "protein_g_goal_week",
                    models.DecimalField(
                        decimal_places=1, editable=False, max_digits=10
                    ),
                ),
                (
                    "measurement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="calorie_plans",
                        to="measurements.measurement",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
